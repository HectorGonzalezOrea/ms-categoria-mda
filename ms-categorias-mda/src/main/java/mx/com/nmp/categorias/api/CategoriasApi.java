/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.17).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package mx.com.nmp.categorias.api;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import mx.com.nmp.categorias.model.BadRequest;
import mx.com.nmp.categorias.model.GeneralResponse;
import mx.com.nmp.categorias.model.InternalServerError;
import mx.com.nmp.categorias.model.InvalidAuthentication;
import mx.com.nmp.categorias.model.ResponseGetCategorias;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-11-12T23:53:03.246Z")

@Api(value = "categorias", description = "the categorias API")
public interface CategoriasApi {

	@ApiOperation(value = "Obtiene las categorías para carga incial de la pantalla", nickname = "categoriasGet", notes = "obtiene la configuración de categorías ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = ResponseGetCategorias.class, authorizations = {
			@Authorization(value = "apiKey") }, tags = {})
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Obtiene listas de categorias a presentar en pantalla", response = ResponseGetCategorias.class),
			@ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
			@ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
			@ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
	@RequestMapping(value = "/categorias", produces = { "application/json" }, method = RequestMethod.GET)
	
	ResponseEntity<?> categoriasGet(
			@ApiParam(value = "Usuario en el sistema origen que lanza la petición", required = true) @RequestHeader(value = "usuario", required = true) String usuario,
			@ApiParam(value = "Sistema que origina la petición", required = true, allowableValues = "portalInteligenciaComercial") @RequestHeader(value = "origen", required = true) String origen,
			@ApiParam(value = "Destino final de la información", required = true, allowableValues = "bluemix, mockserver") @RequestHeader(value = "destino", required = true) String destino);

	@ApiOperation(value = "Almacenar las categorías", nickname = "categoriasGuardarconfiguracionPost", notes = "Almacena la configuración de categorías ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = GeneralResponse.class, authorizations = {
			@Authorization(value = "apiKey") }, tags = {})
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Alta exitosa", response = GeneralResponse.class),
			@ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
			@ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
			@ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
	@RequestMapping(value = "/categorias", produces = {
			"application/json" }, method = RequestMethod.POST)
	ResponseEntity<?> categoriasGuardarconfiguracionPost(
			@ApiParam(value = "Usuario en el sistema origen que lanza la petición", required = true) @RequestHeader(value = "usuario", required = true) String usuario,
			@ApiParam(value = "Sistema que origina la petición", required = true, allowableValues = "portalInteligenciaComercial") @RequestHeader(value = "origen", required = true) String origen,
			@ApiParam(value = "Destino final de la información", required = true, allowableValues = "bluemix, mockserver") @RequestHeader(value = "destino", required = true) String destino,
			@ApiParam(value = "guardar la configuración de las categorias y otros") @Valid @RequestBody ResponseGetCategorias categoriasbody);
}
